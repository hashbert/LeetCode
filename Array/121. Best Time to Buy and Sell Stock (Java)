//https://leetcode.com/problems/best-time-to-buy-and-sell-stock/

class Solution {
    public int maxProfit(int[] prices) {
        int max = 0, profit = 0;
        for (int i = prices.length-1; i>=0; i--){
            max = Math.max(max, prices[i]);
            profit = Math.max(profit, max-prices[i]);
        }
        return profit;
    }
}

//The idea is to find the largest difference in the array where the largest number is after the smallest number. Otherwise return 0.
//Time: O(n) will need to touch every element in prices
//Space: O(1) only using two variables to store intermediate solutions
