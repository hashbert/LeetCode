//https://leetcode.com/problems/remove-nth-node-from-end-of-list/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode p1=new ListNode(-1);
        p1.next=head;
        ListNode save = p1;
        while (n>=0){
            p1=p1.next;
            n--;
        }
        ListNode p2=head;
        if (p1==null) return head.next;
        while(p1.next!=null){
            p1=p1.next;
            p2=p2.next;
        }
        p2.next = p2.next.next;
        return save.next;
    }
}
//use two pointers. p1 advances n spaces. Then p2 and p1 advance simultaneously until p1==null. Skip p2's next node to delete the nth node from the end.
//Time: O(n) where n is total number of nodes
//Space: O(1)
